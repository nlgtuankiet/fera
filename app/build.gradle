apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "androidx.navigation.safeargs.kotlin"

apply from: "../gradle/config.gradle"

kapt {
  correctErrorTypes true
}

android {
  compileOptions {
//    coreLibraryDesugaringEnabled true TODO
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8.toString()
  }
  buildFeatures {
    viewBinding true
  }
  compileSdkVersion 29
  buildToolsVersion "29.0.3"
  testOptions {
    unitTests.all {
      testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        outputs.upToDateWhen { false }
        showStandardStreams = true
        exceptionFormat = 'full'
      }
    }
  }
  defaultConfig {
    multiDexEnabled true
    applicationId "com.nlgtuankiet.fera"
    minSdkVersion minSdk
    println "min sdk is $minSdk"
    targetSdkVersion targetSdk
    versionCode vcode
    versionName vname
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }


  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }


  sourceSets {
    androidTest {
      java.srcDirs += ['src/test/java/com/nlgtuankiet/fera/share']
    }
  }
  if (dynamic) {
    def dynamicModules = [
        "home",
        "data",
    ]

    dynamicModules.forEach { module ->
      if (shouldInclude(module)) {
        dynamicFeatures += ":$module".toString()
      }
    }
  }
}

dependencies {
//  coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.5' TODO
  api deps.moshi
  kapt deps.moshiProcessor
  api deps.dagger
  kapt deps.daggerProcessor
  api deps.exec
  api deps.execKiller
  api deps.kotlinStdLib
  api deps.kotlinCoroutine
  api deps.navigation
  api deps.navigationDynamic
  api deps.epoxy
  api deps.mvrx
  api deps.okHttp
  api deps.assistedInject
  api deps.kotlinCoroutine
  kapt deps.assistedInjectProccesor

  api deps.daggerAndroid
  api(project(":domain"))
  api(project(":core"))
  if (!dynamic) {
    api(project(":home"))
    api(project(":data"))
  }
  api("androidx.core:core-ktx:1.3.0")
  api("androidx.multidex:multidex:2.0.1")
//  implementation 'com.arthenica:mobile-ffmpeg-full:4.3.2'
  api deps.appCompat
  api deps.fragment
  api deps.constraintLayout
  api deps.inject
  testImplementation("junit:junit:4.12")
  androidTestImplementation("androidx.test.ext:junit:1.1.1")
  androidTestImplementation("androidx.test.espresso:espresso-core:3.2.0")
}

