apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"

apply from: "../gradle/config.gradle"

android { handler -> applyAndroidConfig(handler) }
kapt { handler -> applyKaptConfig(handler) }

android {
  defaultConfig {
    multiDexEnabled true
    applicationId "com.nlgtuankiet.fera"
    minSdkVersion minSdk
    targetSdkVersion targetSdk
    versionCode vcode
    versionName vname
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  signingConfigs {
    try {
      release {
        def keystoreFile = new File(rootProject.projectDir, ".keystore")
        keystoreFile.delete()
        keystoreFile.createNewFile()
        keystoreFile << env.getOrDefault("ANDROID_KEYSTORE", "").decodeBase64()
        storeFile keystoreFile
        storePassword env.getOrDefault("ANDROID_KEYSTORE_PASSWORD", "")
        keyAlias env.getOrDefault("ANDROID_KEYSTORE_ALIAS", "")
        keyPassword env.getOrDefault("ANDROID_KEYSTORE_PASSWORD", "")
      }
    } catch (Exception ignored) {
    }
    ci {
      storeFile new File(rootProject.projectDir, ".circleci/keystore.jks")
      storePassword "123456"
      keyAlias "DEFAULT"
      keyPassword "123456"
    }
  }


  buildTypes {
    release {
      if (isInCI) {
        signingConfig signingConfigs.ci
      } else {
        signingConfig signingConfigs.release
      }
      debuggable false
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  sourceSets {
    androidTest {
      java.srcDirs += [
        'src/test/java/com/nlgtuankiet/fera/share'
      ]
    }
  }
  if (dynamic) {
    dynamicModules.forEach { module ->
      if (shouldInclude(module)) {
        dynamicFeatures += ":$module".toString()
      }
    }
  }
}
dependencies { handler ->
  addAllExternalDependencies(handler)
}

dependencies {
  //  coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.5'
  kapt deps.moshiProcessor
  kapt deps.daggerProcessor
  kapt deps.assistedInjectProccesor
  kaptTest deps.daggerProcessor

  libraryModules.forEach { libraryModule -> api(project(":$libraryModule")) }

  if (!dynamic) {
    allAndroidModules.forEach { androidModule -> api(project(":$androidModule")) }
  }

  androidTestImplementation("androidx.test.ext:junit:1.1.1")
  androidTestImplementation('androidx.test:rules:1.3.0-rc03')
}


